# http://docs.openstack.org/developer/heat/template_guide/hot_spec.html#heat-template-version
heat_template_version: 2014-10-16

# this template builds an instance with all necessary components for dynamic cluster
# for details please refer http://eresearchsa.github.io/citc/all-in-one.html

description: >
  This template builds the head node of a working dynamic cluster for evaluation.
  
parameters:

  key_name:
    type: string
    label: Key Name
    description: Name of an existing KeyPair to enable SSH access to the instances.
    default: ersakey

  instance_type:
    type: string
    label: Instance Type
    description: The NeCTAR flavour the webserver is to run on
    default: m1.small

  image_id:
    type: string
    label: Image ID
    description: ID of the image to use for the instance to be created (MUST BE CentOS/SL), the default value is Nectar's official SL 6.5
    default: c4ab5035-acb2-4cbf-9f34-eb14131d8cee

  availability_zone:
    type: string
    label: Availability Zone
    description: Name of the availability zone to fire up the cluster head node.
    default: sa

  server_name:
    type: string
    label: OpenStack Name of the head node
    description: Openstack Name of the head node
    default: dynamiccluster

  user_network:    
    type: string
    label: Network Range for users
    description: the is where the users get into dynamic cluster's dashboard and ssh console from
    default: 172.16.5.0/24

resources:

  dynamic_cluster_sg:
    # Use this when we do not have Neutron networking.
    # http://docs.openstack.org/developer/heat/template_guide/cfn.html#AWS::EC2::SecurityGroup
    type: AWS::EC2::SecurityGroup
    properties:
      GroupDescription: access rules for dynamic cluster.
      SecurityGroupIngress:
        # controlled by iptables, in security group we open up to whole world
        - { IpProtocol: tcp, FromPort: '15001', ToPort: '15004', CidrIp : "0.0.0.0/0" }
        - { IpProtocol: tcp, FromPort: '4505', ToPort: '4506', CidrIp : "0.0.0.0/0" }
        - { IpProtocol: tcp, FromPort: '2049', ToPort: '2049', CidrIp : "0.0.0.0/0" }
        # controlled by security group
        - { IpProtocol: tcp, FromPort: '22', ToPort: '22', CidrIp: {get_param: user_network} }
        - { IpProtocol: tcp, FromPort: '443', ToPort: '443', CidrIp: {get_param: user_network} }

  server:
    # http://docs.openstack.org/developer/heat/template_guide/openstack.html#OS::Nova::Server
    type: OS::Nova::Server
    properties:
      name: {get_param: server_name}
      image: {get_param: image_id}
      flavor: {get_param: instance_type}
      key_name: {get_param: key_name}
      availability_zone: {get_param: availability_zone}
      security_groups:
        - {get_resource: dynamic_cluster_sg}
      user_data_format: RAW
      user_data: 
        str_replace:
          template: |
            #!/bin/bash
            # disable selinux
            /bin/sed -i 's/^SELINUX=.*$/SELINUX=disabled/' /etc/selinux/config
            /usr/sbin/setenforce Permissive
            # figure out correct hostname
            yum install -y bind-utils
            IP=$(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | cut -d' ' -f1)
            NAME=$(nslookup $IP | grep "name =" | cut -d" " -f3)
            HOSTNAME=$(echo $NAME | sed - -e "s/\.$//")
            if [ ! "$(hostname)" = "$HOSTNAME" ]; then
                # set hostname in system files
                /bin/hostname $HOSTNAME
                echo "$IP $HOSTNAME" >> /etc/hosts
                /bin/sed -i -e "s/^HOSTNAME=.*$/HOSTNAME=$HOSTNAME/" /etc/sysconfig/network
            fi
            # run configuration
            curl https://raw.githubusercontent.com/eResearchSA/citc/master/all-in-one/bootstrap.sh | sh -
            /bin/sed -i 's/your_security_group/$security_group$/' /opt/all-in-one/srv/salt/dynamiccluster/dynamiccluster.yaml
            /bin/sed -i 's/your_key/$key_name$/' /opt/all-in-one/srv/salt/dynamiccluster/dynamiccluster.yaml
            /usr/bin/qmgr -c 'create queue default'
            /usr/bin/qmgr -c 'set queue default queue_type = Execution'
            /usr/bin/qmgr -c 'set queue default resources_default.walltime = 9000:00:00'
            /usr/bin/qmgr -c 'set queue default enabled = True'
            /usr/bin/qmgr -c 'set queue default started = True'
            /usr/bin/qmgr -c 'set server default_queue = default'
          params:
            $security_group$: { get_resource: dynamic_cluster_sg }
            $key_name$: {get_param: key_name}

outputs:

    instance_ip:
        description: The IP address of the deployed head node instance
        value: { get_attr: [server, first_address] }

